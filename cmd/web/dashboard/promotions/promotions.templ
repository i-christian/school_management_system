package promotions

import (
	"school_management_system/internal/database"
	"time"
	"github.com/google/uuid"
	"strings"
)

// PromotionsPage renders the main promotions page.
templ PromotionsPage(classPromotions []database.ListClassPromotionsRow, classes []database.Class, term database.GetCurrentTermRow, history database.ShowLastPromotionRow) {
	<!-- Popover container -->
	<div id="popover-container"></div>
	<section id="promotions-page" class="mx-auto p-6">
		<div class="flex items-center justify-between mb-6">
			<h2 class="text-xl font-bold text-gray-800">Class Promotions</h2>
			<section class="flex gap-5">
				<button
					hx-get="/promotions/create"
					hx-target="#promotions-area"
					hx-swap="innerHTML"
					class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded hover:cursor-pointer text-sm"
					title="Set Class Promotions"
				>
					<p class="flex gap-1 items-center justify-center">
						<i class="fas fa-cog mr-1"></i> <span class="md:block hidden">Set Promotions</span>
					</p>
				</button>
				<button
					hx-get="/promotions/reset"
					hx-target="#promotions-area"
					hx-swap="innerHTML"
					class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded text-sm hover:cursor-pointer"
					title="Reset Promotion Rules"
				>
					<p class="flex gap-1 items-center justify-center">
						<i class="fas fa-undo mr-1"></i> <span class="md:block hidden">Reset</span>
					</p>
				</button>
			</section>
		</div>
		<section id="promotions-area">
			<div id="promotions-content">
				@PromotionsList(classPromotions)
			</div>
			<div class="mt-8 border-t pt-6">
				<h3 class="text-lg font-semibold text-gray-800 mb-4">Promote Students</h3>
				@PromoteStudentsSection(term, history)
			</div>
		</section>
	</section>
}

// PromotionsList renders a list of configured class promotions.
templ PromotionsList(classPromotions []database.ListClassPromotionsRow) {
	if len(classPromotions) == 0 {
		<div class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4" role="alert">
			<p class="font-bold">No Promotions Found</p>
			<p>No class promotions rule found in the system</p>
		</div>
	} else {
		<div class="mb-6 border border-gray-300 rounded-lg shadow-xs">
			<summary class="bg-gray-200 px-2 py-1 font-semibold cursor-pointer hover:bg-gray-300 rounded-md transition flex justify-between items-center">
				<div class="flex gap-3 items-center justify-center">
					Class Promotion Rules
				</div>
			</summary>
			<div class="overflow-x-auto bg-white p-4 rounded-b-lg">
				<table class="min-w-full table-auto border border-gray-300 rounded-lg shadow-xs">
					<thead class="bg-blue-500 text-white text-sm uppercase">
						<tr>
							<th class="border border-gray-300 px-4 py-2 text-left">Current Class</th>
							<th class="border border-gray-300 px-4 py-2 text-left">Next Class</th>
						</tr>
					</thead>
					<tbody class="divide-y divide-gray-200 text-sm">
						for _, promotion := range classPromotions {
							@PromotionsTableRow(promotion)
						}
					</tbody>
				</table>
			</div>
		</div>
	}
}

// PromotionsTableRow renders a single row in the class promotions table.
templ PromotionsTableRow(promotion database.ListClassPromotionsRow) {
	<tr>
		<td class="border border-gray-300 px-4 py-2">{ promotion.CurrentClassName }</td>
		<td class="border border-gray-300 px-4 py-2">
			if promotion.NextClassName.Valid {
				{ promotion.NextClassName.String }
			} else {
				<span class="text-gray-400">Graduation</span>
			}
		</td>
	</tr>
}

// CreatePromotionForm renders a form to create a new class promotion rule.
templ CreatePromotionForm(classes []database.Class, graduateClass database.GetCurrentGraduateClassRow) {
	<div class="max-w-3xl mx-auto p-6">
		<div class="bg-white rounded-lg shadow-lg overflow-hidden">
			<header class="bg-blue-600 px-6 py-4">
				<h2 class="text-white text-xl font-bold">Create Class Promotion Rule</h2>
			</header>
			<form
				hx-post="/promotions/create"
				hx-target="#popover-container"
				hx-swap="innerHTML"
				class="px-6 py-6"
			>
				<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
					<section>
						<label class="block text-gray-700 font-semibold mb-2">
							Current Class
						</label>
						<select
							type="text"
							name="class_id"
							required
							class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
						>
							<option value="">Select Current Class</option>
							for _, class := range classes {
								<option value={ class.ClassID.String() }>
									{ class.Name }
								</option>
							}
						</select>
					</section>
					<section>
						<label class="block text-gray-700 font-semibold mb-2">Next Class</label>
						<select
							type="text"
							name="next_class_id"
							class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
						>
							<option value="">Select Next Class</option>
							<option value={ graduateClass.ClassID.String() }>
								{ graduateClass.Name + "(Last Selection)" }
							</option>
							for _, class := range classes {
								<option value={ class.ClassID.String() }>
									{ class.Name }
								</option>
							}
						</select>
					</section>
				</div>
				<section class="flex justify-end mt-8 space-x-4">
					<button
						type="button"
						hx-get="/promotions"
						hx-target="#content-area"
						hx-swap="innerHTML"
						class="bg-gray-500 hover:bg-gray-600 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-gray-400 hover:cursor-pointer"
					>
						Cancel
					</button>
					<button
						type="submit"
						class="bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-500 hover:cursor-pointer"
					>
						Save
					</button>
				</section>
			</form>
		</div>
	</div>
}

// PromoteStudentsSection renders a section to trigger student promotions.
templ PromoteStudentsSection(term database.GetCurrentTermRow, history database.ShowLastPromotionRow) {
	<div class="bg-white rounded-lg shadow-lg overflow-hidden p-6">
		<h4 class="text-lg font-semibold text-gray-800 mb-4">Initiate Student Promotion</h4>
		if term.PreviousTermID.Valid && history.StoredTermID != term.PreviousTermID.Bytes {
			<form
				hx-get="/promotions/promote-students"
				hx-target="#promotions-page"
				hx-swap="outerHTML"
				class="space-y-4"
			>
				<section>
					<label class="block text-gray-700 font-semibold mb-2">
						Select New Term
					</label>
					<select
						type="text"
						name="new_term_id"
						required
						class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
					>
						<option value="">Select New Term</option>
						<option value={ term.TermID.String() }>
							{ term.AcademicTerm } - { term.AcademicYear } - Starting Date: ({ term.OpeningDate.Time.Format(time.DateOnly) })
						</option>
					</select>
				</section>
				<button
					type="submit"
					class="bg-green-600 hover:bg-green-700 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-green-500 hover:cursor-pointer"
				>
					Promote Students
				</button>
			</form>
		}
		if history.StoredTermID != uuid.Nil && !history.IsUndone {
			<section class="mt-4 pt-4 border-t flex flex-col gap-1 justify-center items-center">
				<div class="text-lg font-semibold text-gray-800 mb-4">
					Last Promotion was From: 
					if history.StoredTermID != uuid.Nil {
						<div class="flex flex-col gap-1">
							<p>{ "Academic Year: " + history.AcademicYear.String + " (" + history.TermName + ")" }</p>
							<p>
								{ "Time of event: " + history.PromotionDate.Time.Format(time.ANSIC ) }
							</p>
						</div>
					} else {
						No previous event
					}
				</div>
				<form
					hx-get="/promotions/undo"
					hx-target="#promotions-page"
					hx-swap="outerHTML"
					class="space-y-4"
				>
					<input type="hidden" name="previous_term_id" value={ term.PreviousTermID.String() }/>
					<button
						type="submit"
						class="bg-red-600 hover:bg-red-700 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-red-500 hover:cursor-pointer"
					>
						Undo Promotion
					</button>
				</form>
			</section>
		}
	</div>
}

templ ConfirmationForm(action string, id string) {
	<section id="promotions-modal" class="max-w-md mx-auto mt-10">
		<div class="bg-white w-full rounded-lg shadow-lg p-6">
			<h2 class="text-xl font-bold mb-4 text-red-600">Confirm { action }</h2>
			<p class="mb-4">Are you sure you want to continue { action }?</p>
			<div class="flex justify-end space-x-2">
				<button
					type="button"
					class="px-4 py-2 bg-gray-500 text-white rounded hover:cursor-pointer hover:bg-gray-600 focus:outline-none"
					hx-get="/promotions"
					hx-target="#content-area"
					hx-swap="innerHTML"
				>
					Cancel
				</button>
				if len(strings.TrimSpace(id)) > 0 {
					<button
						class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 focus:outline-none hover:cursor-pointer"
						hx-post={ "/promotions/" + id + "/" + action }
						hx-target="#content-area"
						hx-swap="innerHTML"
					>
						{ action }
					</button>
				} else {
					<button
						class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 focus:outline-none hover:cursor-pointer"
						hx-post={ "/promotions/" + action }
						hx-target="#content-area"
						hx-swap="innerHTML"
					>
						{ action }
					</button>
				}
			</div>
		</div>
	</section>
}
