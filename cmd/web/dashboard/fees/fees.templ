package fees

import (
	"github.com/google/uuid"
	"school_management_system/internal/database"
	"github.com/jackc/pgx/v5/pgtype"
	"strconv"
)

// ClassRoomData represents a classroom along with its fee records.
type ClassRoomData struct {
	ClassID         uuid.UUID                            `json:"class_id"`
	ClassName       string                               `json:"class_name"`
	RequiredTuition pgtype.Numeric                       `json:"required_tuition"`
	Students        []database.ListStudentFeesRecordsRow `json:"students"`
}

// FeesList renders a list of classes with their respective fee records.
templ FeesList(classRooms []ClassRoomData) {
	<section id="fees-list" class="mx-auto p-6">
		<div class="flex items-center justify-between mb-6">
			<h2 class="text-xl font-bold text-gray-800">Tuition Fees</h2>
		</div>
		<nav class="mb-6">
			<ul class="flex space-x-2 overflow-x-auto">
				for _, class := range classRooms {
					<li>
						<button
							hx-get={ "/fees/class/" + class.ClassID.String() }
							hx-target="#fees-container"
							hx-swap="innerHTML"
							class="bg-gray-200 px-2 py-1 font-semibold cursor-pointer hover:bg-gray-300 rounded-md transition border border-gray-300 shadow-xs"
						>
							{ class.ClassName }
						</button>
					</li>
				}
			</ul>
		</nav>
		<div id="fees-container">
			{ children... }
		</div>
	</section>
}

// ClassFeesTable renders the fee payment details for a specific class.
templ ClassFeesTable(class ClassRoomData) {
	{{
		tuition, _ := class.RequiredTuition.Float64Value()
	}}
	<div class="mb-6 border border-gray-300 rounded-lg shadow-xs">
		<summary class="bg-gray-200 px-2 py-1 font-semibold cursor-pointer hover:bg-gray-300 rounded-md transition flex justify-between items-center">
			{ class.ClassName }
			<section class="text-gray-800 text-sm font-normal flex flex-row items-center justify-items-end gap-2">
				<p class="mb-2 font-bold">Tuition: { strconv.FormatFloat(tuition.Float64, 'f', 2, 64) }</p>
				<button
					hx-get={ "/fees/" + class.ClassID.String() + "/create" }
					class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded hover:cursor-pointer text-sm"
					title="Set tuition"
				>
					<p class="flex gap-1">
						<i class="fas fa-cog mr-1"></i> <span class="md:block hidden">Set Tuition</span>
					</p>
				</button>
			</section>
		</summary>
		<div class="overflow-x-auto bg-white p-4 rounded-b-lg">
			<table class="min-w-full table-auto border border-gray-300 rounded-lg shadow-xs">
				<thead class="bg-blue-500 text-white text-sm uppercase">
					<tr>
						<th class="border border-gray-300 px-4 py-2 text-left">Last Name</th>
						<th class="border border-gray-300 px-4 py-2 text-left">First Name</th>
						<th class="border border-gray-300 px-4 py-2 text-left">Middle Name</th>
						<th class="border border-gray-300 px-4 py-2 text-left">Status</th>
						<th class="border border-gray-300 px-4 py-2 text-left">Paid</th>
						<th class="border border-gray-300 px-4 py-2 text-left">Arrears</th>
						<th class="border border-gray-300 px-4 py-2 text-left">Actions</th>
					</tr>
				</thead>
				<tbody class="divide-y divide-gray-200 text-sm">
					for _, student := range class.Students {
						@FeesTableRow(student)
					}
				</tbody>
			</table>
		</div>
	</div>
}

// FeesTableRow renders a single student's fee record row.
templ FeesTableRow(student database.ListStudentFeesRecordsRow) {
	{{
		paid, _ := student.Paidamount.Float64Value()
		arrears, _ := student.Arrears.Float64Value()
	}}
	<tr class="bg-gray-50 hover:bg-gray-100 transition">
		<td class="border border-gray-300 px-4 py-2">{ student.LastName }</td>
		<td class="border border-gray-300 px-4 py-2">{ student.FirstName }</td>
		<td class="border border-gray-300 px-4 py-2">
			if student.MiddleName.Valid {
				{ student.MiddleName.String }
			} else {
				<span class="text-gray-400">N/A</span>
			}
		</td>
		<td class="border border-gray-300 px-4 py-2">{ student.Status }</td>
		<td class="border border-gray-300 px-4 py-2">{ strconv.FormatFloat(paid.Float64, 'f', 2, 64) }</td>
		<td class="border border-gray-300 px-4 py-2">{ strconv.FormatFloat(arrears.Float64, 'f', 2, 64) }</td>
		<td class="border border-gray-300 px-4 py-2">
			<div class="flex space-x-2">
				<button
					hx-get={ "/fees/" + student.FeesID.String() + "/edit" }
					class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded hover:cursor-pointer text-sm"
				>
					<i class="fas fa-edit mr-1"></i> Edit
				</button>
				<button
					hx-get={ "/fees/" + student.StudentID.String() + "/add" }
					class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded hover:cursor-pointer text-sm"
				>
					<i class="fas fa-plus mr-1"></i><span class="md:hidden">Add</span>
				</button>
			</div>
		</td>
	</tr>
}
