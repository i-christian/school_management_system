package students

import "school_management_system/internal/database"
import "strings"

templ StudentsList(studentList []database.ListStudentsRow) {
	<section id="student-list" class="container mx-auto p-4">
		<div class="flex items-center justify-between mb-4">
			<h2 class="text-xl font-bold">Students</h2>
			<button
				class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none"
				hx-get="/students/create"
				hx-target="#content-area"
				hx-swap="innerHTML"
			>
				Create Student
			</button>
		</div>
		<div class="overflow-x-auto">
			<table class="min-w-full table-auto border-collapse border border-gray-200">
				<thead class="bg-gray-100">
					<tr>
						<th class="border border-gray-200 px-4 py-2 text-left">Student No</th>
						<th class="border border-gray-200 px-4 py-2 text-left">Last Name</th>
						<th class="border border-gray-200 px-4 py-2 text-left">First Name</th>
						<th class="border border-gray-200 px-4 py-2 text-left">Gender</th>
						<th class="border border-gray-200 px-4 py-2 text-left">Date of Birth</th>
						<th class="border border-gray-200 px-4 py-2 text-left">Status</th>
						<th class="border border-gray-200 px-4 py-2 text-left">Academic Year</th>
						<th class="border border-gray-200 px-4 py-2 text-left">Class</th>
						<th class="border border-gray-200 px-4 py-2 text-left">Actions</th>
					</tr>
				</thead>
				<tbody id="student-table-body" class="divide-y text-sm divide-gray-200">
					for _, student := range studentList {
						<tr>
							<td class="border border-gray-200 px-4 py-2">{ student.StudentNo }</td>
							<td class="border border-gray-200 px-4 py-2">{ student.LastName }</td>
							<td class="border border-gray-200 px-4 py-2">{ student.FirstName }</td>
							<td class="border border-gray-200 px-4 py-2">{ student.Gender }</td>
							<td class="border border-gray-200 px-4 py-2">{ student.DateOfBirth.Time.Format("2006-01-02") }</td>
							<td class="border border-gray-200 px-4 py-2">{ student.Status }</td>
							<td class="border border-gray-200 px-4 py-2">{ student.Academicyear }</td>
							<td class="border border-gray-200 px-4 py-2">{ student.Classname.String }</td>
							<td class="border border-gray-200 px-4 py-2">
								<div class="flex space-x-2">
									<button
										class="flex items-center px-2 py-1 text-sm text-white bg-yellow-500 rounded-md hover:bg-yellow-600 focus:outline-none"
										hx-get={ "/students/" + student.StudentID.String() + "/edit" }
										hx-target="#content-area"
										hx-swap="innerHTML"
									>
										<i class="fas fa-edit mr-1"></i> Edit
									</button>
									<button
										class="flex items-center px-2 py-1 text-sm text-white bg-red-500 rounded-md hover:bg-red-600 focus:outline-none"
										hx-get={ "/students/" + student.StudentID.String() + "/delete" }
										hx-target="#modal"
										hx-swap="innerHTML"
									>
										<i class="fas fa-trash mr-1"></i> Delete
									</button>
								</div>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</section>
}

// templ CreateStudentForm renders a form for creating a new student along with guardian information.
// The academicYearID is pre-rendered.
templ CreateStudentForm(academicYear database.GetCurrentAcademicYearAndTermRow, classes []database.Class) {
	<div class="max-w-3xl mx-auto p-6">
		<div class="bg-white rounded-lg shadow-lg overflow-hidden">
			<div class="bg-green-600 px-6 py-4">
				<h2 class="text-white text-xl font-bold">Create New Student</h2>
			</div>
			<form
				hx-post="/students"
				hx-target="#content-area"
				hx-swap="innerHTML"
				class="px-6 py-6"
			>
				<section class="flex flex-row gap-1">
					<select
						required
						class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
						name="year_term_id"
					>
						<option value={ academicYear.AcademicYearID.String() + "=" + academicYear.TermID.String() }>
							{ academicYear.AcademicYear } - { academicYear.AcademicTerm.String }
						</option>
					</select>
					<select
						required
						class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
						name="class_id"
					>
						for _, class := range classes {
							if !strings.HasPrefix(class.Name, "Graduates - ") {
								<option value={ class.ClassID.String() }>
									{ class.Name }
								</option>
							}
						}
					</select>
				</section>
				<section>
					<h3 class="text-lg font-bold mb-4">Student Information</h3>
					<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
						<div>
							<label class="block text-gray-700 font-semibold mb-2">First Name</label>
							<input
								type="text"
								name="first_name"
								required
								placeholder="First Name"
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							/>
						</div>
						<div>
							<label class="block text-gray-700 font-semibold mb-2">Last Name</label>
							<input
								type="text"
								name="last_name"
								required
								placeholder="Last Name"
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							/>
						</div>
						<div>
							<label class="block text-gray-700 font-semibold mb-2">Middle Name</label>
							<input
								type="text"
								name="middle_name"
								placeholder="Optional"
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							/>
						</div>
						<div>
							<label class="block text-gray-700 font-semibold mb-2">Gender</label>
							<select
								name="gender"
								required
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							>
								<option value="">Select</option>
								<option value="M">Male</option>
								<option value="F">Female</option>
							</select>
						</div>
						<div class="md:col-span-2">
							<label class="block text-gray-700 font-semibold mb-2">Date of Birth</label>
							<input
								type="date"
								name="date_of_birth"
								required
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							/>
						</div>
					</div>
				</section>
				<hr class="my-6"/>
				<section>
					<h3 class="text-lg font-bold mb-4">Guardian Information</h3>
					<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
						<div class="md:col-span-2">
							<label class="block text-gray-700 font-semibold mb-2">Guardian Name</label>
							<input
								type="text"
								name="guardian_name"
								placeholder="Full Name"
								required
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							/>
						</div>
						<div>
							<label class="block text-gray-700 font-semibold mb-2">Phone Number 1</label>
							<input
								type="tel"
								pattern="([0-9]{12})"
								name="phone_number_1"
								required
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							/>
						</div>
						<div>
							<label class="block text-gray-700 font-semibold mb-2">Phone Number 2 (optional)</label>
							<input
								type="tel"
								name="phone_number_2"
								pattern="([0-9]{12})"
								placeholder="Optional"
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							/>
						</div>
						<div>
							<label class="block text-gray-700 font-semibold mb-2">Guardian Gender</label>
							<select
								name="guardian_gender"
								required
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							>
								<option value="">Select</option>
								<option value="M">Male</option>
								<option value="F">Female</option>
							</select>
						</div>
						<div class="md:col-span-2">
							<label class="block text-gray-700 font-semibold mb-2">Profession</label>
							<input
								type="text"
								name="profession"
								placeholder="Optional"
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							/>
						</div>
					</div>
				</section>
				<section class="flex justify-end mt-8 space-x-4">
					<button
						type="button"
						hx-get="/students"
						hx-target="#content-area"
						hx-swap="innerHTML"
						class="bg-gray-500 hover:bg-gray-600 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-gray-400"
					>
						Cancel
					</button>
					<button
						type="submit"
						class="bg-green-600 hover:bg-green-700 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-green-500"
					>
						Save
					</button>
				</section>
			</form>
		</div>
	</div>
}

templ EditStudentModal(student database.GetStudentRow, classes []database.Class) {
	<div class="max-w-3xl mx-auto p-6">
		<div class="bg-white rounded-lg shadow-lg overflow-hidden">
			<div class="bg-green-600 px-6 py-4">
				<h2 class="text-white text-xl font-bold">Edit Student</h2>
			</div>
			<form
				hx-put={ "/students/" + student.StudentID.String() }
				hx-target="#content-area"
				hx-swap="innerHTML"
				class="px-6 py-6"
			>
				<section>
					<h3 class="text-lg font-bold mb-4">Student Information</h3>
					<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
						<div>
							<label class="block text-gray-700 font-semibold mb-2">First Name</label>
							<input
								type="text"
								name="first_name"
								required
								value={ student.FirstName }
								placeholder="First Name"
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							/>
						</div>
						<div>
							<label class="block text-gray-700 font-semibold mb-2">Last Name</label>
							<input
								type="text"
								name="last_name"
								value={ student.LastName }
								required
								placeholder="Last Name"
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							/>
						</div>
						<div>
							<label class="block text-gray-700 font-semibold mb-2">Middle Name</label>
							<input
								type="text"
								name="middle_name"
								value={ student.MiddleName.String }
								placeholder="Optional"
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							/>
						</div>
						<div>
							<label class="block text-gray-700 font-semibold mb-2">Gender</label>
							<select
								name="gender"
								required
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							>
								<option value="">Select</option>
								<option
									value="M"
									if student.Gender == "M" {
										selected="M"
									}
								>Male</option>
								<option
									value="F"
									if student.Gender == "F" {
										selected="F"
									}
								>Female</option>
							</select>
						</div>
						<div>
							<label for="class" class="block text-gray-700 font-semibold mb-2">Class</label>
							<select
								id="class"
								required
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
								name="class_id"
							>
								for _, class := range classes {
									if !strings.HasPrefix(class.Name, "Graduates - ") {
										<option
											value={ class.ClassID.String() }
											if student.Classname.String == class.Name {
												selected={ class.Name }
											}
										>
											{ class.Name }
										</option>
									}
								}
							</select>
						</div>
						<div class="md:col-span-2">
							<label class="block text-gray-700 font-semibold mb-2">Date of Birth</label>
							<input
								type="date"
								name="date_of_birth"
								value={ student.DateOfBirth.Time.Format("2006-01-02") }
								required
								class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-green-500"
							/>
						</div>
					</div>
				</section>
				<section class="flex justify-end mt-8 space-x-4">
					<button
						type="button"
						hx-get="/students"
						hx-target="#content-area"
						hx-swap="innerHTML"
						class="bg-gray-500 hover:bg-gray-600 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-gray-400"
					>
						Cancel
					</button>
					<button
						type="submit"
						class="bg-green-600 hover:bg-green-700 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-green-500"
					>
						Save
					</button>
				</section>
			</form>
		</div>
	</div>
}

templ DeleteStudentModal(studentID string) {
	<section id="delete-confirmation-modal" class="fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50 z-50">
		<div class="bg-white w-full max-w-md rounded-lg shadow-lg p-6">
			<h2 class="text-xl font-bold mb-4 text-red-600">Confirm Delete</h2>
			<p class="mb-4">Are you sure you want to delete this user?</p>
			<div class="flex justify-end space-x-2">
				<button
					type="button"
					class="px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 focus:outline-none"
					hx-get="/students"
					hx-target="#content-area"
					hx-swap="innerHTML"
				>
					Cancel
				</button>
				<button
					class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 focus:outline-none"
					hx-delete={ "/students/" + studentID }
					hx-target="#content-area"
					hx-swap="innerHTML"
				>
					Delete
				</button>
			</div>
		</div>
	</section>
}
