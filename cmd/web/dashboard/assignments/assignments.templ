package assignments

import (
	"school_management_system/internal/database"
)

// templ AssignmentsList renders a list of assignments.
templ AssignmentsList(assignments []database.ListAssignmentsRow) {
	<div class="container mx-auto p-6">
		<div class="flex items-center justify-between mb-4">
			<h2 class="text-xl font-bold">Teacher Assignments</h2>
			<button
				class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none"
				hx-get="/academics/assignments/create"
				hx-target="#content-area"
				hx-swap="innerHTML"
			>
				<i class="fas fa-plus mr-2"></i> Create Assignment
			</button>
		</div>
		<section>
			<ul id="assignments-list" class="space-y-4">
				for _, assignment := range assignments {
					<li class="p-4 bg-gray-100 rounded shadow">
						<div class="flex items-center justify-between">
							<div>
								<p class="text-lg font-semibold">
									Class: { assignment.Classroom } - Subject: { assignment.Subject }
								</p>
								<p class="text-sm text-gray-600">
									Teacher: { assignment.TeacherLastname + assignment.TeacherFirstname }
								</p>
							</div>
							<div class="flex space-x-2">
								<button
									class="flex items-center px-3 py-1 text-sm text-white bg-yellow-500 rounded-md hover:bg-yellow-600"
									hx-get={ "/academics/assignments/" + assignment.ID.String() + "/edit" }
									hx-target="#content-area"
									hx-swap="innerHTML"
								>
									<i class="fas fa-edit mr-1"></i> Edit
								</button>
								<button
									class="flex items-center px-3 py-1 text-sm text-white bg-red-500 rounded-md hover:bg-red-600"
									hx-delete={ "/academics/assignments/" + assignment.ID.String() }
									hx-target="#content-area"
									hx-swap="outerHTML"
								>
									<i class="fas fa-trash mr-1"></i> Delete
								</button>
							</div>
						</div>
					</li>
				}
			</ul>
		</section>
	</div>
}

// templ AssignmentForm renders the create-assignment form with dropdowns.
templ AssignmentForm(teachers []database.ListUsersRow, subjects []database.ListAllSubjectsRow) {
	<div class="max-w-3xl mx-auto p-6">
		<div class="bg-white rounded-lg shadow-lg overflow-hidden">
			<header class="bg-blue-600 px-6 py-4">
				<h2 class="text-white text-xl font-bold">Create Assignment</h2>
			</header>
			<form
				hx-post="/academics/assignments"
				hx-target="#content-area"
				hx-swap="innerHTML"
				class="px-6 py-6"
			>
				<div class="grid grid-cols-1 gap-6">
					<section>
						<label class="block text-gray-700 font-semibold mb-2">Teacher</label>
						<select
							name="teacher_id"
							required
							class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
						>
							for _, teacher := range teachers {
								<option value={ teacher.UserID.String() }>
									{ teacher.FirstName } { teacher.LastName }
								</option>
							}
						</select>
					</section>
					<section>
						<label class="block text-gray-700 font-semibold mb-2">Class</label>
						<select
							name="class_id"
							required
							class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
						>
							for _, subject := range subjects {
								<option value={ subject.Classid.String() }>{ subject.Classname }</option>
							}
						</select>
					</section>
					<section>
						<label class="block text-gray-700 font-semibold mb-2">Subject</label>
						<select
							name="subject_id"
							required
							class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
						>
							for _, subject := range subjects {
								<option value={ subject.Subjectid.String() }>{ subject.Subjectname }</option>
							}
						</select>
					</section>
				</div>
				<section class="flex justify-end mt-8 space-x-4">
					<button
						type="button"
						hx-get="/academics/assignments"
						hx-push-url="true"
						hx-target="#content-area"
						hx-swap="innerHTML"
						class="bg-gray-500 hover:bg-gray-600 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-gray-400"
					>
						Cancel
					</button>
					<button
						type="submit"
						class="bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-500"
					>
						Save
					</button>
				</section>
			</form>
		</div>
	</div>
}

// templ EditAssignmentForm renders the edit-assignment form with pre-filled values.
templ EditAssignmentForm(assignment database.GetAssignmentRow) {
	<div class="max-w-3xl mx-auto p-6">
		<div class="bg-white rounded-lg shadow-lg overflow-hidden">
			<header class="bg-blue-600 px-6 py-4">
				<h2 class="text-white text-xl font-bold">Edit Assignment</h2>
			</header>
			<form
				hx-put={ "/academics/assignments/" + assignment.ID.String() }
				hx-target="#content-area"
				hx-swap="innerHTML"
				class="px-6 py-6"
			>
				<div class="grid grid-cols-1 gap-6">
					<section>
						<label class="block text-gray-700 font-semibold mb-2">Teacher ID</label>
						<input
							type="text"
							placeholder="Teacher UUID"
							required
							class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
						/>
					</section>
					<section>
						<label class="block text-gray-700 font-semibold mb-2">Class ID</label>
						<input
							type="text"
							placeholder="Class UUID"
							required
							class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
						/>
					</section>
					<section>
						<label class="block text-gray-700 font-semibold mb-2">Subject ID</label>
						<input
							type="text"
							placeholder="Subject UUID"
							required
							class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
						/>
					</section>
				</div>
				<section class="flex justify-end mt-8 space-x-4">
					<button
						type="button"
						hx-get="/academics/assignments"
						hx-push-url="true"
						hx-target="#content-area"
						hx-swap="innerHTML"
						class="bg-gray-500 hover:bg-gray-600 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-gray-400"
					>
						Cancel
					</button>
					<button
						type="submit"
						class="bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-500"
					>
						Save
					</button>
				</section>
			</form>
		</div>
	</div>
}
