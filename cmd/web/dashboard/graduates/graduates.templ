package graduates

import (
	"school_management_system/internal/database"
)

// GraduatesPage renders the main graduates page.
templ GraduatesPage(academicYears []database.AcademicYear, selectedAcademicYearID string) {
	<section id="graduates-page" class="mx-auto p-6">
		<div class="flex items-center justify-between mb-6">
			<h2 class="text-xl font-bold text-gray-800">Graduates List</h2>
		</div>
		<div class="mb-4">
			@AcademicYearDropdown(academicYears, selectedAcademicYearID)
		</div>
		<div id="graduates-list-container"></div>
	</section>
}

// AcademicYearDropdown renders a dropdown to select the academic year.
templ AcademicYearDropdown(academicYears []database.AcademicYear, selectedAcademicYearID string) {
	<form
		hx-post="/graduates"
		hx-target="#graduates-list-container"
		hx-swap="innerHTML"
		class="inline-block"
	>
		<label for="academic_year_id" class="block text-gray-700 font-semibold mb-2">
			Filter by Academic Year:
		</label>
		<section class="flex gap-3">
			<select
				id="academic_year_id"
				name="academic_year_id"
				class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
			>
				<option value="">All Academic Years</option>
				for _, ay := range academicYears {
					<option
						value={ ay.AcademicYearID.String() }
						if ay.AcademicYearID.String() == selectedAcademicYearID {
							selected={ ay.AcademicYearID.String() }
						}
					>
						{ ay.Name }
					</option>
				}
			</select>
			<button
				class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none"
				type="submit"
			>
				Show
			</button>
		</section>
	</form>
}

// GraduatesList renders a table of graduates.
templ GraduatesList(graduates []database.ListGraduatesByAcademicYearRow) {
	if len(graduates) == 0 {
		<div class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4" role="alert">
			<p class="font-bold">No Graduates Found</p>
			<p>No graduates found for the selected academic year.</p>
		</div>
	} else {
		<div class="mb-6 border border-gray-300 rounded-lg shadow-xs">
			<summary class="bg-gray-200 px-2 py-1 font-semibold cursor-pointer hover:bg-gray-300 rounded-md transition flex justify-between items-center">
				<div class="flex gap-3 items-center justify-center">
					Graduates List
				</div>
			</summary>
			<div class="overflow-x-auto bg-white p-4 rounded-b-lg">
				<table class="min-w-full table-auto border border-gray-300 rounded-lg shadow-xs">
					<thead class="bg-blue-500 text-white text-sm uppercase">
						<tr>
							<th class="border border-gray-300 px-4 py-2 text-left">Student No</th>
							<th class="border border-gray-300 px-4 py-2 text-left">First Name</th>
							<th class="border border-gray-300 px-4 py-2 text-left">Middle Name</th>
							<th class="border border-gray-300 px-4 py-2 text-left">Last Name</th>
							<th class="border border-gray-300 px-4 py-2 text-left">Gender</th>
							<th class="border border-gray-300 px-4 py-2 text-left">Graduate Class</th>
						</tr>
					</thead>
					<tbody class="divide-y divide-gray-200 text-sm">
						for _, graduate := range graduates {
							@GraduatesTableRow(graduate)
						}
					</tbody>
				</table>
			</div>
		</div>
	}
}

// GraduatesTableRow renders a single row for a graduate in the table.
templ GraduatesTableRow(graduate database.ListGraduatesByAcademicYearRow) {
	<tr>
		<td class="border border-gray-300 px-4 py-2">{ graduate.StudentNo }</td>
		<td class="border border-gray-300 px-4 py-2">{ graduate.FirstName }</td>
		<td class="border border-gray-300 px-4 py-2">
			if graduate.MiddleName.Valid {
				{ graduate.MiddleName.String }
			} else {
				<span class="text-gray-400">N/A</span>
			}
		</td>
		<td class="border border-gray-300 px-4 py-2">{ graduate.LastName }</td>
		<td class="border border-gray-300 px-4 py-2">{ graduate.Gender }</td>
		<td class="border border-gray-300 px-4 py-2">
			if graduate.GraduateClassName.Valid {
				{ graduate.GraduateClassName.String }
			} else {
				<span class="text-gray-400">N/A</span>
			}
		</td>
	</tr>
}
