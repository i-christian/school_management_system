package dashboard

templ DashboardCards(user DashboardUserRole) {
	<div class="grid grid-cols-1 lg:flex lg:space-x-6">
		<div class="grid grid-cols-1 md:grid-cols-2 gap-6 lg:w-1/2">
			<section
				class="bg-gradient-to-r from-blue-500 to-blue-600 p-6 shadow-lg rounded-lg hover:shadow-xl transition-shadow duration-200"
				hx-get="/dashboard/total_users"
				hx-trigger="load"
				hx-target="#total-users"
				hx-swap="innerHTML"
			>
				<h3 class="text-gray-200 text-sm">Total Users</h3>
				<p id="total-users" class="mt-2 text-3xl font-bold text-white">0</p>
			</section>
			<section
				class="bg-gradient-to-r from-green-500 to-green-600 p-6 shadow-lg rounded-lg hover:shadow-xl transition-shadow duration-200"
				hx-get="/dashboard/total_students"
				hx-trigger="load"
				hx-target="#total-students"
				hx-swap="innerHTML"
			>
				<h3 class="text-gray-200 text-sm">Total Students</h3>
				<p id="total-students" class="mt-2 text-3xl font-bold text-white">0</p>
			</section>
			if user.Role == "teacher" || user.Role == "classteacher" {
				<section
					class="bg-gradient-to-r from-teal-500 to-teal-600 p-6 shadow-lg rounded-lg hover:shadow-xl transition-shadow duration-200"
					hx-get="/dashboard/assigned_classes"
					hx-trigger="load"
					hx-target="#assigned-classes"
					hx-swap="outerHTML"
				>
					<p id="assigned-classes" class="mt-2 text-3xl font-bold text-white">No assigments available</p>
				</section>
			}
			if user.Role == "accountant" || user.Role == "admin" {
				<section
					class="bg-gradient-to-r from-purple-500 to-purple-600 p-6 shadow-lg rounded-lg hover:shadow-xl transition-shadow duration-200"
					hx-get="/fees/details"
					hx-target="#total-income"
					hx-swap="innerHTML"
				>
					<h3 class="text-gray-200 text-sm">Income</h3>
					<p id="total-income" class="mt-2 text-3xl font-bold text-white">0.00</p>
				</section>
			}
			<section
				class="bg-gradient-to-r from-indigo-500 to-indigo-600 p-6 shadow-lg rounded-lg hover:shadow-xl transition-shadow duration-200"
				hx-get="/dashboard/academics"
				hx-swap="innerHTML"
				hx-trigger="load"
				hx-target="#academics-details"
			>
				<h3 class="text-gray-200 text-sm">Academic Year &amp; Term</h3>
				<section id="academics-details" class="mt-2 text-2xl font-bold text-white">Loading...</section>
			</section>
		</div>
		<div class="lg:w-1/2 mt-6 lg:mt-0">
			<section
				id="calendar_events"
				class="bg-white p-5 shadow-lg rounded-lg hover:shadow-xl transition-shadow duration-200 h-full"
				hx-get="/dashboard/academic_events"
				hx-trigger="load"
				hx-swap="none"
			>
				<h3 class="text-gray-800 text-sm mb-2">Calendar</h3>
				<div id="calendar" class="rounded overflow-hidden bg-white p-2"></div>
			</section>
		</div>
	</div>
	<script type="application/javascript" src="/assets/js/fullcalendar/index.global.min.js"></script>
	<script src="/assets/js/fullcalendar/locales-all.global.min.js"></script>
	<script src="/assets/js/fullcalendar/dayGrid/index.global.min.js"></script>
	<script>
		let dynamicEvents = [];
		let calendar_events_section = document.getElementById("calendar_events");

		calendar_events_section.addEventListener("htmx:afterRequest", e => {
			const doc = new DOMParser().parseFromString(e.detail.xhr.responseText, "text/html");
			const eventsScript = doc.getElementById("academicEvents");
			const data = eventsScript && JSON.parse(eventsScript.textContent);

			if (data) {
				dynamicEvents = [
					{ title: 'Academic Year', start: data.AcademicYearStart, end: data.AcademicYearEnd },
					{ title: 'Term', start: data.TermStart, end: data.TermEnd }
				];
				if (calendar) {
					calendar.setOption('events', dynamicEvents);
					calendar.refetchEvents();
				}
			}
		});

		let calendar;
		document.addEventListener('DOMContentLoaded', function() {
			var calendarEl = document.getElementById('calendar');
			calendar = new FullCalendar.Calendar(calendarEl, {
				initialView: 'dayGridMonth',
				events: dynamicEvents
			});
			calendar.render();
		});
	</script>
}
