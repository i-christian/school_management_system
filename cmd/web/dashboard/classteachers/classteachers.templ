package classteachers

import "school_management_system/internal/database"

templ ClassTeachers(classTeachers []database.ListCLassTeachersRow, classID string) {
	if len(classTeachers) == 0 {
		<button
			class="flex items-center px-1 py-1 text-xs text-white bg-green-500 rounded-md hover:bg-green-600 hover:cursor-pointer"
			hx-get={ "/academics/classteacher/" + classID + "/create" }
			hx-target="#classes-list"
		>
			<p class="flex gap-1 items-center justify-center" title="set classteacher">
				<i class="fas fa-cog mr-1"></i> <span class="md:block hidden p-1">Set Classteacher</span>
			</p>
		</button>
	} else {
		for _, classTeacher := range classTeachers {
			if classTeacher.ClassID.String() == classID {
				<section class="">
					<div>
						<h3 class="text-lg font-semibold">Class Teacher: { classTeacher.FirstName + " " + classTeacher.LastName }</h3>
					</div>
					<div class="flex space-x-2">
						<button
							class="flex items-center px-3 py-1 text-sm text-white bg-yellow-500 rounded-md hover:bg-yellow-600 hover:cursor-pointer"
							hx-get={ "/academics/classteacher/" + classTeacher.ClassID.String() + "/edit" }
							hx-target="#classes-list"
							hx-swap="innerHTML"
						>
							<p class="flex gap-1 items-center justify-center" title="edit classteacher">
								<i class="fas fa-edit mr-1"></i> <span class="md:block hidden p-1">Edit Classteacher</span>
							</p>
						</button>
					</div>
				</section>
			}
		}
	}
}

templ ClassTeacherForm(teachers []database.GetAllDBClassTeachersRow, classID string) {
	<div class="max-w-3xl mx-auto p-6">
		<div class="bg-white rounded-lg shadow-lg overflow-hidden">
			<header class="bg-blue-600 px-6 py-4">
				<h2 class="text-white text-xl font-bold">Assign Classteacher</h2>
			</header>
			<form
				hx-post={ "/academics/classteacher/" + classID }
				hx-target="#content-area"
				hx-swap="innerHTML"
				class="px-6 py-6"
			>
				<div class="grid grid-cols-1 gap-6">
					<section>
						<label class="block text-gray-700 font-semibold mb-2">
							Teacher Name
						</label>
						<select
							name="teacher_id"
							required
							class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
						>
							for _, teacher := range teachers {
								<option value={ teacher.TeacherID.String() }>
									{ teacher.FirstName } { teacher.LastName } ({ teacher.Role })
								</option>
							}
						</select>
					</section>
				</div>
				<section class="flex justify-end mt-8 space-x-4">
					<button
						type="button"
						hx-get="/academics/classes"
						hx-push-url="true"
						hx-target="#content-area"
						hx-swap="innerHTML"
						class="bg-gray-500 hover:bg-gray-600 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-gray-400 hover:cursor-pointer"
					>
						Cancel
					</button>
					<button
						type="submit"
						class="bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-500 hover:cursor-pointer"
					>
						Save
					</button>
				</section>
			</form>
		</div>
	</div>
}

templ EditClassTeacherForm(currentClassTeacher database.GetClassTeacherRow, teachers []database.GetAllDBClassTeachersRow) {
	<div class="max-w-3xl mx-auto p-6">
		<div class="bg-white rounded-lg shadow-lg overflow-hidden">
			<header class="bg-blue-600 px-6 py-4">
				<h2 class="text-white text-xl font-bold">Edit Classteacher</h2>
			</header>
			<form
				hx-put={ "/academics/classteacher/" + currentClassTeacher.ClassID.String() }
				hx-target="#content-area"
				hx-swap="innerHTML"
				class="px-6 py-6"
			>
				<div class="grid grid-cols-1 gap-6">
					<section>
						<p class="block text-gray-700 font-semibold mb-2">
							Assigned Teacher: { currentClassTeacher.FirstName + " " + currentClassTeacher.LastName }
						</p>
					</section>
					<section>
						<label class="block text-gray-700 font-semibold mb-2">
							Teacher Name
						</label>
						<select
							name="teacher_id"
							required
							class="w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
						>
							<option
								selected=""
								value=""
							>Select</option>
							for _, teacher := range teachers {
								<option value={ teacher.TeacherID.String() }>
									{ teacher.FirstName } { teacher.LastName } ({ teacher.Role })
								</option>
							}
						</select>
					</section>
				</div>
				<section class="flex justify-end mt-8 space-x-4">
					<button
						type="button"
						hx-get="/academics/classes"
						hx-push-url="true"
						hx-target="#content-area"
						hx-swap="innerHTML"
						class="bg-gray-500 hover:bg-gray-600 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-gray-400 hover:cursor-pointer"
					>
						Cancel
					</button>
					<button
						type="submit"
						class="bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-md py-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-500 hover:cursor-pointer"
					>
						Save
					</button>
				</section>
			</form>
		</div>
	</div>
}
