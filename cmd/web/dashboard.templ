package web

templ DashboardCards() {
	<div class="grid grid-cols-1 lg:flex lg:space-x-6">
		<div class="grid grid-cols-1 md:grid-cols-2 gap-6 lg:w-1/2">
			<div class="bg-white p-6 shadow rounded-lg">
				<h3 class="text-gray-500 text-sm">Total Users</h3>
				<p class="mt-2 text-3xl font-bold text-gray-700">1,234</p>
			</div>
			<div class="bg-white p-6 shadow rounded-lg">
				<h3 class="text-gray-500 text-sm">Total Students</h3>
				<p class="mt-2 text-3xl font-bold text-gray-700">567</p>
			</div>
			<div class="bg-white p-6 shadow rounded-lg">
				<h3 class="text-gray-500 text-sm">Income</h3>
				<p class="mt-2 text-3xl font-bold text-gray-700">$8,910</p>
			</div>
			<div class="bg-white p-6 shadow rounded-lg">
				<h3 class="text-gray-500 text-sm">Academic Year &amp; Term</h3>
				<p class="mt-2 text-2xl font-bold text-gray-700">2024-2025, Fall Semester</p>
			</div>
		</div>
		<div class="lg:w-1/2 mt-6 lg:mt-0">
			<div class="bg-white p-6 shadow rounded-lg h-full">
				<h3 class="text-gray-500 text-sm mb-2">Calendar</h3>
				<div id="calendar" class="rounded overflow-hidden"></div>
			</div>
		</div>
	</div>
	<script>
    document.addEventListener('DOMContentLoaded', function() {
      var calendarEl = document.getElementById('calendar');
      var calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        headerToolbar: {
          left: 'prev,next today',
          center: 'title',
          right: 'dayGridMonth,timeGridWeek,timeGridDay'
        },
        // Sample events
        events: [
          { title: 'Event 1', start: '2025-02-10' },
          { title: 'Event 2', start: '2025-02-15', end: '2025-02-17' },
        ]
      });
      calendar.render();
    });
  </script>
}

templ navList() {
	<nav class="p-4 h-full">
		<ul class="space-y-2">
			<li>
				<a href="/" class="flex items-center px-4 py-3 rounded-md hover:bg-blue-200 transition" title="Home">
					<svg xmlns="http://www.w3.org/2000/svg" class="nav-icon w-5 h-5 mr-3 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9l9-7 9 7v11a2 2 0 01-2 2h-4a2 2 0 01-2-2V12H9v8a2 2 0 01-2 2H3a2 2 0 01-2-2V9z"></path>
					</svg>
					<span class="nav-text transition-all duration-300 text-sm">Home</span>
				</a>
			</li>
			<li id="users-menu" class="relative">
				<button class="w-full flex items-center justify-between px-4 py-3 rounded-md hover:bg-blue-200 transition" title="Users">
					<span class="flex items-center">
						<svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-3 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a4 4 0 00-5-3.87M9 20H4v-2a4 4 0 015-3.87M15 11a4 4 0 11-8 0 4 4 0 018 0z"></path>
						</svg>
						<span class="nav-text transition-all duration-300 text-sm">Users</span>
					</span>
					<svg xmlns="http://www.w3.org/2000/svg" id="users-menu-icon" class="w-4 h-4 text-gray-600 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
					</svg>
				</button>
				<ul id="users-submenu" class="hidden pl-8 mt-1 space-y-1">
					<li>
						<a
							href="/dashboard/userlist"
							class="block px-4 py-2 rounded-md hover:bg-blue-100 transition text-sm"
							hx-get="/dashboard/userlist"
							hx-target="#content-area"
							hx-swap="innerHTML"
						>
							All Users
						</a>
					</li>
					<li>
						<a
							href="/dashboard/active-users"
							class="block px-4 py-2 rounded-md hover:bg-blue-100 transition text-sm"
							hx-get="/dashboard/active-users"
							hx-target="#content-area"
							hx-swap="innerHTML"
						>
							Active Users
						</a>
					</li>
				</ul>
			</li>
			<li id="students-menu" class="relative">
				<button class="w-full flex items-center justify-between px-4 py-3 rounded-md hover:bg-blue-200 transition" title="Students">
					<span class="flex items-center">
						<svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-3 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 14l9-5-9-5-9 5 9 5z"></path>
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 14l6.16-3.422a12.083 12.083 0 01.84 6.86L12 21l-7-3.562a12.083 12.083 0 01.84-6.86L12 14z"></path>
						</svg>
						<span class="nav-text transition-all duration-300 text-sm">Students</span>
					</span>
					<svg xmlns="http://www.w3.org/2000/svg" id="students-menu-icon" class="w-4 h-4 text-gray-600 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
					</svg>
				</button>
				<ul id="students-submenu" class="hidden pl-8 mt-1 space-y-1">
					<li>
						<a
							href="/students"
							class="block px-4 py-2 rounded-md hover:bg-blue-100 transition text-sm"
							hx-get="/students"
							hx-target="#content-area"
							hx-swap="innerHTML"
						>
							All Students
						</a>
					</li>
					<li>
						<a
							href="/students/graduated"
							class="block px-4 py-2 rounded-md hover:bg-blue-100 transition text-sm"
							hx-get="/students/graduated"
							hx-target="#content-area"
							hx-swap="innerHTML"
						>
							Graduated
						</a>
					</li>
				</ul>
			</li>
			<li>
				<a
					href="/grades"
					class="flex items-center px-4 py-3 rounded-md hover:bg-blue-200 transition"
					hx-get="/grades"
					hx-target="#content-area"
					hx-swap="innerHTML"
					title="Grades"
				>
					<svg xmlns="http://www.w3.org/2000/svg" class="nav-icon w-5 h-5 mr-3 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m2 0a2 2 0 012 2v4a2 2 0 01-2 2H7a2 2 0 01-2-2v-4a2 2 0 012-2m10 0V6a2 2 0 00-2-2H9a2 2 0 00-2 2v6"></path>
					</svg>
					<span class="nav-text transition-all duration-300 text-sm">Grades</span>
				</a>
			</li>
			<li>
				<a
					href="/fees"
					class="flex items-center px-4 py-3 rounded-md hover:bg-blue-200 transition"
					hx-get="/fees"
					hx-target="#content-area"
					hx-swap="innerHTML"
					title="Fees"
				>
					<svg xmlns="http://www.w3.org/2000/svg" class="nav-icon w-5 h-5 mr-3 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z"></path>
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 2v2m0 16v2m6-10h2M4 12H2m15.364-6.364l1.414 1.414M4.222 19.778l1.414-1.414m0-10.728L4.222 4.222m15.364 15.364l-1.414-1.414"></path>
					</svg>
					<span class="nav-text transition-all duration-300 text-sm">Fees</span>
				</a>
			</li>
		</ul>
	</nav>
}

templ userProfile() {
	<div id="header-user-profile" class="flex items-center space-x-3 cursor-pointer">
		<div class="w-8 h-8 flex items-center justify-center bg-blue-600 text-white rounded-full text-xs font-semibold">
			A
		</div>
		<span class="hidden md:inline-block text-sm font-medium">Admin</span>
		<svg xmlns="http://www.w3.org/2000/svg" id="header-user-icon" class="w-4 h-4 text-gray-600 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
			<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
		</svg>
	</div>
	<div id="header-user-options" class="hidden absolute right-4 mt-12 w-48 bg-white shadow rounded-md overflow-hidden z-50 transition-all duration-200">
		<a href="/settings" class="block px-4 py-2 text-sm bg-blue-600 text-white hover:bg-blue-500">
			<svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 inline mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 3a2.25 2.25 0 00-2.197 1.757L6.03 7.5H3a.75.75 0 000 1.5h3l.528 2.743a2.25 2.25 0 004.444 0L12 9h3a.75.75 0 000-1.5h-3l-.528-2.743A2.25 2.25 0 009.75 3z"></path>
			</svg>
			Settings
		</a>
		<button
			class="block w-full text-left px-4 py-2 text-sm bg-red-600 text-white hover:bg-red-500"
			hx-get="/user/logout/confirm"
			hx-target="body"
			hx-swap="beforeend"
		>
			<svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 inline mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h6a2 2 0 012 2v1"></path>
			</svg>
			Logout
		</button>
	</div>
	<script>
    document.getElementById('header-user-profile').addEventListener('click', function(e) {
      const options = document.getElementById('header-user-options');
      const icon = document.getElementById('header-user-icon');
      options.classList.toggle('hidden');
      icon.classList.toggle('rotate-180');
      e.stopPropagation();
    });
    document.addEventListener('click', function(e) {
      const options = document.getElementById('header-user-options');
      if (!options.classList.contains('hidden')) {
        options.classList.add('hidden');
        document.getElementById('header-user-icon').classList.remove('rotate-180');
      }
    });
  </script>
}

templ Dashboard() {
	<!DOCTYPE html>
	<html lang="en" class="h-screen bg-gray-100">
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width,initial-scale=1"/>
			<title>{ SchoolName() }</title>
			<link href="/assets/css/output.css" rel="stylesheet"/>
			<script src="/assets/js/htmx.min.js"></script>
			<script src="https://cdn.jsdelivr.net/npm/fullcalendar/index.global.min.js"></script>
		</head>
		<body class="bg-gray-100 text-gray-800 font-sans h-screen">
			<header id="header" class="fixed top-0 left-0 right-0 z-50 flex items-center justify-between bg-white shadow p-4 transition-all duration-300">
				<button id="toggle-sidebar" class="text-2xl">
					<svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
					</svg>
				</button>
				<h1 class="text-xl ml-2 font-bold">{ SchoolName() }</h1>
				@userProfile()
			</header>
			<aside id="sidebar" class="fixed z-40 h-full bg-white shadow transition-all duration-300 overflow-hidden" data-expanded="true">
				<div class="pt-16 h-full flex flex-col">
					@navList()
				</div>
			</aside>
			<main class="pt-[4rem] transition-all mx-5 my-6 duration-300">
				<div id="content-area">
					@DashboardCards()
					{ children... }
				</div>
			</main>
			<script>
        function updateNavText(expanded) {
          document.querySelectorAll('.nav-text').forEach(el => {
            if(expanded) {
              el.classList.remove('hidden');
            } else {
              el.classList.add('hidden');
            }
          });
        }

        const sidebar = document.getElementById('sidebar');
        const contentArea = document.getElementById('content-area');
        const toggleBtn = document.getElementById('toggle-sidebar');

        function setSidebarWidth(width) {
          document.documentElement.style.setProperty('--sidebar-width', width + 'px');
        }

        let isDesktop = window.innerWidth >= 1024;
        let expanded = isDesktop ? true : false;

        function applyLayout() {
          if (isDesktop) {
            sidebar.classList.remove('-translate-x-full');
            sidebar.classList.add('top-16');
            if (expanded) {
              sidebar.classList.remove('w-20');
              sidebar.classList.add('w-64');
              setSidebarWidth(256);
              document.querySelectorAll('.nav-icon').forEach(el => {
                el.classList.remove('w-6','h-6');
                el.classList.add('w-5','h-5');
              });
            } else {
              sidebar.classList.remove('w-64');
              sidebar.classList.add('w-20');
              setSidebarWidth(80);
              document.querySelectorAll('.nav-icon').forEach(el => {
                el.classList.remove('w-5','h-5');
                el.classList.add('w-6','h-6');
              });
            }
            contentArea.style.marginLeft = getComputedStyle(document.documentElement).getPropertyValue('--sidebar-width');
          } else {
            contentArea.style.marginLeft = '0px';
            sidebar.classList.remove('top-16');
            sidebar.classList.add('top-16');
            if (expanded) {
              sidebar.classList.remove('-translate-x-full', 'w-20');
              sidebar.classList.add('w-64');
            } else {
              sidebar.classList.remove('w-64');
              sidebar.classList.add('w-20', '-translate-x-full');
            }
          }
          updateNavText(expanded);
        }

        applyLayout();

        toggleBtn.addEventListener('click', (e) => {
          e.stopPropagation();
          isDesktop = window.innerWidth >= 1024;
          expanded = !expanded;
          applyLayout();
        });

        document.addEventListener('click', (e) => {
          if (window.innerWidth < 1024) {
            if (!sidebar.contains(e.target) && !toggleBtn.contains(e.target)) {
              if (expanded) {
                expanded = false;
                applyLayout();
              }
            }
          }
        });

        function setupExpandableMenu(menuId, iconId, submenuId) {
          const menuButton = document.getElementById(menuId);
          const menuIcon = document.getElementById(iconId);
          const submenu = document.getElementById(submenuId);
          menuButton.addEventListener('click', (e) => {
            e.stopPropagation();
            submenu.classList.toggle('hidden');
            menuIcon.classList.toggle('rotate-180');
          });
        }
        setupExpandableMenu('users-menu', 'users-menu-icon', 'users-submenu');
        setupExpandableMenu('students-menu', 'students-menu-icon', 'students-submenu');

        window.addEventListener('resize', () => {
          isDesktop = window.innerWidth >= 1024;
          expanded = isDesktop ? true : false;
          applyLayout();
        });
      </script>
		</body>
	</html>
}
