// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package database

import (
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type AcademicYear struct {
	AcademicYearID uuid.UUID   `json:"academic_year_id"`
	Name           string      `json:"name"`
	StartDate      pgtype.Date `json:"start_date"`
	EndDate        pgtype.Date `json:"end_date"`
}

type Assignment struct {
	ID        uuid.UUID `json:"id"`
	ClassID   uuid.UUID `json:"class_id"`
	SubjectID uuid.UUID `json:"subject_id"`
	TeacherID uuid.UUID `json:"teacher_id"`
}

type Class struct {
	ClassID uuid.UUID `json:"class_id"`
	Name    string    `json:"name"`
}

type ClassPromotion struct {
	ClassID     uuid.UUID   `json:"class_id"`
	NextClassID pgtype.UUID `json:"next_class_id"`
}

type DisciplineRecord struct {
	DisciplineID uuid.UUID   `json:"discipline_id"`
	StudentID    uuid.UUID   `json:"student_id"`
	TermID       uuid.UUID   `json:"term_id"`
	Date         pgtype.Date `json:"date"`
	Description  string      `json:"description"`
	ActionTaken  pgtype.Text `json:"action_taken"`
	ReportedBy   uuid.UUID   `json:"reported_by"`
	Notes        pgtype.Text `json:"notes"`
}

type Fee struct {
	FeesID    uuid.UUID      `json:"fees_id"`
	StudentID uuid.UUID      `json:"student_id"`
	TermID    uuid.UUID      `json:"term_id"`
	ClassID   uuid.UUID      `json:"class_id"`
	Required  pgtype.Numeric `json:"required"`
	Paid      pgtype.Numeric `json:"paid"`
	Status    pgtype.Text    `json:"status"`
}

type Grade struct {
	GradeID   uuid.UUID      `json:"grade_id"`
	StudentID uuid.UUID      `json:"student_id"`
	SubjectID uuid.UUID      `json:"subject_id"`
	TermID    uuid.UUID      `json:"term_id"`
	Score     pgtype.Numeric `json:"score"`
	Remark    pgtype.Text    `json:"remark"`
}

type Guardian struct {
	GuardianID   uuid.UUID   `json:"guardian_id"`
	Name         string      `json:"name"`
	PhoneNumber1 pgtype.Text `json:"phone_number_1"`
	PhoneNumber2 pgtype.Text `json:"phone_number_2"`
	Gender       string      `json:"gender"`
	Profession   pgtype.Text `json:"profession"`
}

type Remark struct {
	RemarksID           uuid.UUID          `json:"remarks_id"`
	StudentID           uuid.UUID          `json:"student_id"`
	TermID              uuid.UUID          `json:"term_id"`
	ContentClassTeacher pgtype.Text        `json:"content_class_teacher"`
	ContentHeadTeacher  pgtype.Text        `json:"content_head_teacher"`
	UpdatedAt           pgtype.Timestamptz `json:"updated_at"`
}

type Role struct {
	RoleID      uuid.UUID   `json:"role_id"`
	Name        string      `json:"name"`
	Description pgtype.Text `json:"description"`
}

type Session struct {
	ID        uuid.UUID          `json:"id"`
	SessionID uuid.UUID          `json:"session_id"`
	UserID    uuid.UUID          `json:"user_id"`
	Expires   pgtype.Timestamptz `json:"expires"`
}

type Student struct {
	StudentID      uuid.UUID   `json:"student_id"`
	AcademicYearID uuid.UUID   `json:"academic_year_id"`
	LastName       string      `json:"last_name"`
	FirstName      string      `json:"first_name"`
	Gender         string      `json:"gender"`
	DateOfBirth    pgtype.Date `json:"date_of_birth"`
	Status         string      `json:"status"`
	Promoted       bool        `json:"promoted"`
	Graduated      bool        `json:"graduated"`
	Suspended      bool        `json:"suspended"`
}

type StudentClass struct {
	StudentClassID uuid.UUID `json:"student_class_id"`
	StudentID      uuid.UUID `json:"student_id"`
	ClassID        uuid.UUID `json:"class_id"`
	TermID         uuid.UUID `json:"term_id"`
}

type StudentGuardian struct {
	StudentID  uuid.UUID `json:"student_id"`
	GuardianID uuid.UUID `json:"guardian_id"`
}

type Subject struct {
	SubjectID uuid.UUID `json:"subject_id"`
	ClassID   uuid.UUID `json:"class_id"`
	Name      string    `json:"name"`
}

type Term struct {
	TermID         uuid.UUID   `json:"term_id"`
	AcademicYearID uuid.UUID   `json:"academic_year_id"`
	Name           string      `json:"name"`
	StartDate      pgtype.Date `json:"start_date"`
	EndDate        pgtype.Date `json:"end_date"`
}

type User struct {
	UserID      uuid.UUID          `json:"user_id"`
	LastName    string             `json:"last_name"`
	FirstName   string             `json:"first_name"`
	Gender      string             `json:"gender"`
	Email       pgtype.Text        `json:"email"`
	PhoneNumber pgtype.Text        `json:"phone_number"`
	Password    string             `json:"password"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
	RoleID      uuid.UUID          `json:"role_id"`
}
