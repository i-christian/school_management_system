// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: class_promotions.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const updateStudentTerm = `-- name: UpdateStudentTerm :exec
INSERT INTO student_classes (student_id, class_id, term_id)
SELECT
    sc.student_id,
    CASE
        WHEN s.promoted AND cp.next_class_id IS NOT NULL THEN cp.next_class_id
        ELSE sc.class_id
    END AS new_class_id,
    t.term_id
FROM student_classes sc
JOIN students s ON sc.student_id = s.student_id
JOIN classes c ON sc.class_id = c.class_id
LEFT JOIN class_promotions cp ON c.class_id = cp.class_id
JOIN term t ON t.term_id = $1
WHERE s.status = 'active'
  AND t.end_date <= CURRENT_DATE
`

func (q *Queries) UpdateStudentTerm(ctx context.Context, termID pgtype.UUID) error {
	_, err := q.db.Exec(ctx, updateStudentTerm, termID)
	return err
}
